services:
  proxy:
    image: nginx:latest
    ports: 
    - "80:80"
    networks:
    - frontend
    volumes:
    - ./nginx.prod.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 30s
    profiles: 
    - production
    - '' #used to start service  when 'docker compose up --build' is run

  backend:
    build: .
    environment:
      MYSQL_HOST: mysql
      MYSQL_USER: root
      MYSQL_PASSWORD: password
      MYSQL_DB: meals
    networks:
      - backend
      - frontend
    depends_on:
    - mysql
    volumes:
    - web-logs:/app/logs
    command: ["python", "src/app.py"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 30s
    profiles:
    - production
    - ''
  mysql:
    image: mysql:latest
    networks:
      - backend
    volumes:
      - mysql-data:/var/lib/mysql
      - ./schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: meals
    
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 20s
      timeout: 5s
      retries: 5
    profiles: 
    - production
    - ''
   #testing services
  proxy-test:
    image: nginx:latest
    ports: 
    - "80:80"  
    networks:
    - frontend
    volumes:
    - ./nginx.test.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend-test
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 30s
    profiles: ["testing"]
  backend-test:
    build: .
    environment:
      MYSQL_HOST: mysql-test
      MYSQL_USER: root
      MYSQL_PASSWORD: password
      MYSQL_DB: test_meals
      ENV: testing
    networks:
      - backend
      - frontend
    working_dir: /src
    depends_on:
      mysql-test:
        condition: service_healthy
    volumes:
      - web-logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/"]
      interval: 10s
      timeout: 5s
      retries: 15
      start_period: 40s
    profiles: ["testing"]
    command: ["python", "app.py"]


  mysql-test:
    image: mysql:latest
    networks:
      - backend
    volumes:
      - ./schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./staging-init.sql:/docker-entrypoint-initdb.d/02-staging-init.sql
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: test_meals
    ports:
      - "3307:3306"
    tmpfs:
      - /var/lib/mysql
    
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 10
    profiles: ["testing"]
  e2e-tests:
    image: mcr.microsoft.com/playwright/python:latest
    working_dir: /app
    environment:
      APP_URL: http://backend-test:5000
      PLAYWRIGHT_BROWSERS_PATH: /ms-playwright
    depends_on:
      backend-test:
        condition: service_healthy
      mysql-test:
        condition: service_healthy
    networks:
      - backend
      - frontend
    volumes:
      - ./tests:/tests
      - ./requirements.txt:/requirements.txt
      - playwright-cache:/ms-playwright
    #run tests
    command: bash -c "playwright install --with-deps chromium && pip install -r /requirements.txt && pytest /tests/test_playwright.py -v --browser chromium  --junitxml=/tests/junit.xml"
    profiles: ["testing"]

networks:
  frontend:
  backend:

volumes:
  mysql-data:
  web-logs:
  playwright-cache: